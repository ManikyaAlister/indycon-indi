---
title: "Group Level Analyses"
author: "Anonymised for peer review"
format: 
  pdf: 
    execute:
      echo: false
      warning: false
  # html:
  #   code-fold: true
  #   code-summary: "Show the code"
editor: visual
toc: true
number-sections: true
---

```{r}
#| include = FALSE
library(here)
library(tidyverse)
library(brms)
library(ggridges)
library(ggpubr)
library(cowplot)
library(scales)
library(emmeans)
```

```{r}
load(here("data/derived/model_comparison.Rdata"))
load(here("data/clean/all_data_clean.Rdata"))
data <- all_data[[1]] %>%
    mutate(update = post_adjusted - pre_adjusted,
           claim_type = case_when(
             claim_type == "Knowable Eye witness" ~ "Knowable Eyewitness",
              TRUE ~ claim_type

            )
           )

d_independence <- data %>% 
  filter(consensus != "contested")

d_consensus_only <- data %>% 
  filter(consensus != "dependent")
```

# Priors

```{r}
# load claim info
claim_info <- read.csv(here("data/derived/source_data.csv"))
full_claims <- claim_info %>%
  select(claimId, claim)

# make darta set that include the full claim
data$full_claim <- claim_info$claim[match(data$claim, claim_info$claimId)]

# Make pretty -- make it so that each plot fill is part of a gradient
colour_gradient = scales::seq_gradient_pal("blue", "seagreen" , "Lab") (seq(0,1,length.out=15))

# Make figure (I know you might want to just use the code for the plot in the last paper but 
claim_types <- unique(data$claim_type)

plot_list = NULL
# here's my attempt at reproducing it! Still needs a few tweaks)
for (i in 1:length(claim_types)){
  ct <- claim_types[i]
 
  plot_data <-  data %>%
   filter(claim_type == ct) 
 
 medians <- plot_data %>%
   group_by(full_claim) %>%
   summarise(median_prior = median(pre)) %>%
   arrange(median_prior)
 
 plot_data$full_claim <- factor(plot_data$full_claim, levels = medians$full_claim)
 
 plot <- plot_data %>%
  ggplot(aes(x = pre, y = full_claim))+
  geom_density_ridges(aes(fill = full_claim), alpha = .3, scale = 1.5)+
  scale_fill_manual(values = colour_gradient)+
   scale_y_discrete(labels = label_wrap(70), position = "right")+
   labs(title = ct, x = "Prior", y = "")+
   xlim(0,100)+
  theme_classic()+
    theme(
      plot.margin = unit(c(1.5, 0.5, 0.5, 0.5), "cm"),
      legend.position = "none",
        axis.text.y = element_text(size = 12, lineheight = 1.2)  # Adjust the size as needed

    )
 plot_list[[i]] <- plot
}

# re order so that similar claim types are together
plot_list <- plot_list[c(1,4,2,3)]

prior_plot <- ggarrange(plotlist = plot_list, nrow = 2, ncol = 2)
ggsave("07_Plots/priors.png", width = 20, height = 20, plot = prior_plot)


```

The priors plot is too large to show here, but it is in 07_Plots/priors.png (and on the OSF).

# What were the average belief updates for each claim type?

```{r}
mean_updates <- data %>%
  group_by(claim_type, consensus) %>%
  summarise(mean_update = mean(update),
    se_update = sd(update) / sqrt(n())
)

colour_scale <- c("purple", "darkblue", "red")

mean_updates %>% 
  ggplot(aes(x = claim_type, y = mean_update, fill = consensus)) + 
  geom_col(position = "dodge", colour = "black", size = 0.2, alpha = .6) +
  geom_errorbar(aes(ymin = mean_update - se_update, ymax = mean_update + se_update), 
                position = position_dodge(.9), width = 0.2) +
  geom_jitter(data = data, aes(x = claim_type, y = update, colour = consensus, group = consensus), 
              position = position_jitterdodge(dodge.width = .9, jitter.width = .2), alpha = 0.1) +
  ylim(-30, 69) +
  labs(title = "",
       x = "Claim Type",
       y = "Mean Update (Post - Prior)") +
  theme_bw()+
  theme(legend.position = "top") +
  labs(colour = "Trial Type", fill = "Trial Type")+
  scale_color_manual(values = colour_scale) +  # Replace with your desired colors
  scale_fill_manual(values = colour_scale)    # Replace with your desired colors

ggsave(filename = here("analyses/07_Plots/update-by-topic.png"), width = 6, height = 4)

```

# What were the average deltas (independent - dependent) for each claim type?

```{r}
deltas_claim_type <- d_independence %>% 
  filter(consensus != "contested") %>%
  pivot_wider(names_from = consensus, values_from = update) %>%
  group_by(claim_type) %>%
  summarise(delta = mean(independent, na.rm = TRUE)-mean(dependent, na.rm = TRUE), post = mean(post))

deltas_claim_type %>% 
  ggplot(aes(x = claim_type, y = delta))+
  geom_col(fill = "seagreen")+
  theme_classic()+
  labs(x = "Claim Type", y = "Delta (Independent - Dependent)")
```

# Modelling

```{r}
# load output 
load(here("data/derived/group_output_combined.Rdata"))

```

## Model Comparison

### Excluding contested condition (independent v dependent)

```{r}
model_LOOICs %>%
  filter(excluded_condition == "contested" & !is_follow_up) %>%
    select(-is_follow_up) %>%
  mutate(model_rank = rank(all_looic),
         all_looic = round(all_looic),
         all_se = round(all_se))
```

### Excluding dependent condition (independent v contested)

```{r}
model_LOOICs %>%
  filter(excluded_condition == "dependent" & !is_follow_up) %>%
  select(-is_follow_up) %>%
    mutate(model_rank = rank(all_looic),
         all_looic = round(all_looic),
         all_se = round(all_se))
```

## Estimates of winning model

### Excluding contested condition (independent v dependent)

```{r}
load(here("analyses/02_output/group-prior-consensus-claim-rm-contested.Rdata"))

getCredibleInt <- function(output, probs = c(0.055, 0.945), decimals = 3){ # default is 89% credible interval 
  posterior_sample <- as_draws_df(output)
  # only include fixed effects
  posterior_sample <- posterior_sample %>%
    select(starts_with("b_"))
  interval <- t(round(apply(posterior_sample, 2, function(x) quantile(x, probs = probs)),3))
  colnames(interval) = c("Lower-CI", "Upper-CI")
  interval
}


getParamDetails <- function(output){
  intervals_89 <- getCredibleInt(output)
  sum_output <- summary(output)
  details <- cbind(round(sum_output$fixed[,"Estimate"],3), intervals_89)
  colnames(details) <- c("Estimate", "Lower", "Upper")
  details
}

getParamDetails(output)

```

#### Follow up of main effects

```{r}
# post hoc comparisons 
em <- emmeans(output, ~claim_type)
summary(pairs(em), point.est = mean, level = .89)

```

### Excluding dependent condition (independent v contested)

```{r}
load(here("analyses/02_output/group-prior-consensusXclaim-rm-dependent.Rdata"))
#summary(output)
getParamDetails(output)

```

#### Follow up main effects and interaction

```{r}
# post hoc comparisons 
em <- emmeans(output, ~claim_type:consensus)
#summary(pairs(em), point.est = mean, level = .89)
```
