#!/bin/bash

# set up job array (make sure the array length is nModels * nParticipants)
#SBATCH --array=1-156

# Partition for the job:
#SBATCH --partition=cascade

# Multithreaded (SMP) job: must run on one node 
#SBATCH --nodes=1

# The name of the job:
#SBATCH --job-name="indy-mod"

# Maximum number of tasks/CPU cores used by the job:
#SBATCH --ntasks=1
#SBATCH --cpus-per-task=1

# The amount of memory in megabytes per process in the job:
#SBATCH --mem=4G

# Use this email address:
#SBATCH --mail-user=alisterm@student.unimelb.edu.au

# Send yourself an email when the job:

# ends successfully
#SBATCH --mail-type=END

# Where to save output logs 
#SBATCH --output=slurm_output/%A_%a.out
#SBATCH --error=slurm_output/%A_%a.err

# The maximum running time of the job in days-hours:mins:sec
#SBATCH --time=1-1:0:00

# check that the script is launched with sbatch
if [ "x$SLURM_JOB_ID" == "x" ]; then
   echo "You need to submit your job to the queuing system with sbatch"
   exit 1
fi

# Run the job from the directory where it was launched (default)

# The modules to load:
module load foss/2022a R/4.2.1

# set the model names
models=(1 2)

# Set the number of models
n_models=2

# Set the participant numbers (make sure the slurm array is set up for the correct model * participant combination)
participants=($(seq 1 78))

# Calculate the model and participant indices from the job array task ID
models_idx=$(((SLURM_ARRAY_TASK_ID-1) % n_models)) 
participant_idx=$(((SLURM_ARRAY_TASK_ID-1) / n_models))

# Run the R script with the input and output files and the participant number as a command line argument
Rscript /data/gpfs/projects/punim1751/indycon-indi/analyses/01_models/indi_${models[$models_idx]}_by_session.R ${participants[$participant_idx]}

##DO NOT ADD/EDIT BEYOND THIS LINE##
##Job monitor command to list the resource usage
my-job-stats -a -n -s